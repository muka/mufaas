// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	FunctionInfo
	AddRequest
	AddResponse
	RemoveRequest
	RemoveResponse
	ListRequest
	ListResponse
	RunRequest
	RunResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FunctionInfo struct {
	ID    string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Type  string `protobuf:"bytes,3,opt,name=Type" json:"Type,omitempty"`
	Cmd   string `protobuf:"bytes,4,opt,name=Cmd" json:"Cmd,omitempty"`
	Error string `protobuf:"bytes,5,opt,name=Error" json:"Error,omitempty"`
}

func (m *FunctionInfo) Reset()                    { *m = FunctionInfo{} }
func (m *FunctionInfo) String() string            { return proto.CompactTextString(m) }
func (*FunctionInfo) ProtoMessage()               {}
func (*FunctionInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FunctionInfo) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *FunctionInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FunctionInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FunctionInfo) GetCmd() string {
	if m != nil {
		return m.Cmd
	}
	return ""
}

func (m *FunctionInfo) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

type AddRequest struct {
	Info   *FunctionInfo `protobuf:"bytes,1,opt,name=Info" json:"Info,omitempty"`
	Source []byte        `protobuf:"bytes,2,opt,name=Source,proto3" json:"Source,omitempty"`
	Image  string        `protobuf:"bytes,3,opt,name=Image" json:"Image,omitempty"`
}

func (m *AddRequest) Reset()                    { *m = AddRequest{} }
func (m *AddRequest) String() string            { return proto.CompactTextString(m) }
func (*AddRequest) ProtoMessage()               {}
func (*AddRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AddRequest) GetInfo() *FunctionInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *AddRequest) GetSource() []byte {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *AddRequest) GetImage() string {
	if m != nil {
		return m.Image
	}
	return ""
}

type AddResponse struct {
	Info *FunctionInfo `protobuf:"bytes,1,opt,name=Info" json:"Info,omitempty"`
}

func (m *AddResponse) Reset()                    { *m = AddResponse{} }
func (m *AddResponse) String() string            { return proto.CompactTextString(m) }
func (*AddResponse) ProtoMessage()               {}
func (*AddResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AddResponse) GetInfo() *FunctionInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

type RemoveRequest struct {
	Name []string `protobuf:"bytes,1,rep,name=Name" json:"Name,omitempty"`
}

func (m *RemoveRequest) Reset()                    { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()               {}
func (*RemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RemoveRequest) GetName() []string {
	if m != nil {
		return m.Name
	}
	return nil
}

type RemoveResponse struct {
	Functions []*FunctionInfo `protobuf:"bytes,1,rep,name=Functions" json:"Functions,omitempty"`
}

func (m *RemoveResponse) Reset()                    { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()               {}
func (*RemoveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *RemoveResponse) GetFunctions() []*FunctionInfo {
	if m != nil {
		return m.Functions
	}
	return nil
}

type ListRequest struct {
	Filter []string `protobuf:"bytes,1,rep,name=Filter" json:"Filter,omitempty"`
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListRequest) GetFilter() []string {
	if m != nil {
		return m.Filter
	}
	return nil
}

type ListResponse struct {
	Functions []*FunctionInfo `protobuf:"bytes,1,rep,name=Functions" json:"Functions,omitempty"`
}

func (m *ListResponse) Reset()                    { *m = ListResponse{} }
func (m *ListResponse) String() string            { return proto.CompactTextString(m) }
func (*ListResponse) ProtoMessage()               {}
func (*ListResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListResponse) GetFunctions() []*FunctionInfo {
	if m != nil {
		return m.Functions
	}
	return nil
}

type RunRequest struct {
	Name  string   `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Args  []string `protobuf:"bytes,2,rep,name=Args" json:"Args,omitempty"`
	Env   []string `protobuf:"bytes,3,rep,name=Env" json:"Env,omitempty"`
	Stdin []byte   `protobuf:"bytes,4,opt,name=Stdin,proto3" json:"Stdin,omitempty"`
}

func (m *RunRequest) Reset()                    { *m = RunRequest{} }
func (m *RunRequest) String() string            { return proto.CompactTextString(m) }
func (*RunRequest) ProtoMessage()               {}
func (*RunRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RunRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RunRequest) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *RunRequest) GetEnv() []string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *RunRequest) GetStdin() []byte {
	if m != nil {
		return m.Stdin
	}
	return nil
}

type RunResponse struct {
	Output []byte `protobuf:"bytes,1,opt,name=Output,proto3" json:"Output,omitempty"`
	Err    []byte `protobuf:"bytes,2,opt,name=Err,proto3" json:"Err,omitempty"`
}

func (m *RunResponse) Reset()                    { *m = RunResponse{} }
func (m *RunResponse) String() string            { return proto.CompactTextString(m) }
func (*RunResponse) ProtoMessage()               {}
func (*RunResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RunResponse) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *RunResponse) GetErr() []byte {
	if m != nil {
		return m.Err
	}
	return nil
}

func init() {
	proto.RegisterType((*FunctionInfo)(nil), "api.FunctionInfo")
	proto.RegisterType((*AddRequest)(nil), "api.AddRequest")
	proto.RegisterType((*AddResponse)(nil), "api.AddResponse")
	proto.RegisterType((*RemoveRequest)(nil), "api.RemoveRequest")
	proto.RegisterType((*RemoveResponse)(nil), "api.RemoveResponse")
	proto.RegisterType((*ListRequest)(nil), "api.ListRequest")
	proto.RegisterType((*ListResponse)(nil), "api.ListResponse")
	proto.RegisterType((*RunRequest)(nil), "api.RunRequest")
	proto.RegisterType((*RunResponse)(nil), "api.RunResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MufaasService service

type MufaasServiceClient interface {
	Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error)
	Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error)
}

type mufaasServiceClient struct {
	cc *grpc.ClientConn
}

func NewMufaasServiceClient(cc *grpc.ClientConn) MufaasServiceClient {
	return &mufaasServiceClient{cc}
}

func (c *mufaasServiceClient) Add(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*AddResponse, error) {
	out := new(AddResponse)
	err := grpc.Invoke(ctx, "/api.MufaasService/Add", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mufaasServiceClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := grpc.Invoke(ctx, "/api.MufaasService/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mufaasServiceClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*ListResponse, error) {
	out := new(ListResponse)
	err := grpc.Invoke(ctx, "/api.MufaasService/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mufaasServiceClient) Run(ctx context.Context, in *RunRequest, opts ...grpc.CallOption) (*RunResponse, error) {
	out := new(RunResponse)
	err := grpc.Invoke(ctx, "/api.MufaasService/Run", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MufaasService service

type MufaasServiceServer interface {
	Add(context.Context, *AddRequest) (*AddResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
	List(context.Context, *ListRequest) (*ListResponse, error)
	Run(context.Context, *RunRequest) (*RunResponse, error)
}

func RegisterMufaasServiceServer(s *grpc.Server, srv MufaasServiceServer) {
	s.RegisterService(&_MufaasService_serviceDesc, srv)
}

func _MufaasService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MufaasServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MufaasService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MufaasServiceServer).Add(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MufaasService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MufaasServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MufaasService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MufaasServiceServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MufaasService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MufaasServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MufaasService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MufaasServiceServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MufaasService_Run_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MufaasServiceServer).Run(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.MufaasService/Run",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MufaasServiceServer).Run(ctx, req.(*RunRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MufaasService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.MufaasService",
	HandlerType: (*MufaasServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _MufaasService_Add_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _MufaasService_Remove_Handler,
		},
		{
			MethodName: "List",
			Handler:    _MufaasService_List_Handler,
		},
		{
			MethodName: "Run",
			Handler:    _MufaasService_Run_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 493 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xcb, 0x8a, 0x13, 0x41,
	0x14, 0xa5, 0xbb, 0x33, 0x8d, 0xb9, 0xe9, 0x64, 0x66, 0x2a, 0x1a, 0xda, 0xe0, 0x62, 0x28, 0x19,
	0x90, 0x59, 0x4c, 0xe3, 0x28, 0x08, 0xb3, 0x19, 0xc3, 0x3c, 0x30, 0xe0, 0x03, 0x3a, 0x2e, 0xdd,
	0x94, 0xe9, 0x9a, 0xd0, 0x90, 0x54, 0xb5, 0xf5, 0x08, 0x0c, 0xe2, 0xc6, 0x5f, 0xf0, 0x0b, 0xfc,
	0x26, 0x7f, 0xc1, 0x0f, 0x91, 0xba, 0x55, 0x4d, 0x12, 0x9c, 0x85, 0xb8, 0xbb, 0xf7, 0xf4, 0xad,
	0x73, 0xee, 0xb9, 0x27, 0x81, 0x2e, 0x6b, 0xea, 0xd3, 0x46, 0x49, 0x23, 0x49, 0xc2, 0x9a, 0x7a,
	0xfc, 0x64, 0x21, 0xe5, 0x62, 0xc9, 0x0b, 0xd6, 0xd4, 0x05, 0x13, 0x42, 0x1a, 0x66, 0x6a, 0x29,
	0xb4, 0x1f, 0xa1, 0x02, 0xb2, 0x1b, 0x2b, 0xe6, 0x0e, 0x9a, 0x8a, 0x5b, 0x49, 0x06, 0x10, 0x4f,
	0xaf, 0xf2, 0xe8, 0x28, 0x7a, 0xd6, 0x2d, 0xe3, 0xe9, 0x15, 0x21, 0xd0, 0x79, 0xcf, 0x56, 0x3c,
	0x8f, 0x11, 0xc1, 0xda, 0x61, 0x1f, 0xef, 0x1a, 0x9e, 0x27, 0x1e, 0x73, 0x35, 0x39, 0x80, 0xe4,
	0x72, 0x55, 0xe5, 0x1d, 0x84, 0x5c, 0x49, 0x1e, 0xc2, 0xde, 0xb5, 0x52, 0x52, 0xe5, 0x7b, 0x88,
	0xf9, 0x86, 0x32, 0x80, 0x49, 0x55, 0x95, 0xfc, 0x8b, 0xe5, 0xda, 0x90, 0x63, 0xe8, 0x38, 0x55,
	0xd4, 0xeb, 0x9d, 0x1d, 0x9e, 0xba, 0xd5, 0xb7, 0xd7, 0x29, 0xf1, 0x33, 0x19, 0x41, 0x3a, 0x93,
	0x56, 0xcd, 0xfd, 0x1a, 0x59, 0x19, 0x3a, 0x27, 0x31, 0x5d, 0xb1, 0x45, 0xbb, 0x89, 0x6f, 0xe8,
	0x4b, 0xe8, 0xa1, 0x84, 0x6e, 0xa4, 0xd0, 0xfc, 0x1f, 0x35, 0xe8, 0x53, 0xe8, 0x97, 0x7c, 0x25,
	0xd7, 0xbc, 0xdd, 0xad, 0x75, 0x1e, 0x1d, 0x25, 0xad, 0x73, 0x3a, 0x81, 0x41, 0x3b, 0x14, 0xd8,
	0x0b, 0xe8, 0xb6, 0x64, 0x1a, 0x47, 0xef, 0x95, 0xd8, 0xcc, 0xd0, 0x63, 0xe8, 0xbd, 0xad, 0xb5,
	0x69, 0x55, 0x46, 0x90, 0xde, 0xd4, 0x4b, 0xc3, 0x55, 0xd0, 0x09, 0x1d, 0xbd, 0x80, 0xcc, 0x8f,
	0xfd, 0xaf, 0xce, 0x27, 0x80, 0xd2, 0x8a, 0xbf, 0xcd, 0xec, 0xc4, 0x38, 0x51, 0x0b, 0x9d, 0xc7,
	0xde, 0xa0, 0xab, 0x5d, 0x8c, 0xd7, 0x62, 0x9d, 0x27, 0x08, 0xb9, 0xd2, 0xdd, 0x78, 0x66, 0xaa,
	0x5a, 0x60, 0xb4, 0x59, 0xe9, 0x1b, 0xfa, 0x0a, 0x7a, 0xc8, 0x1e, 0xb6, 0x1b, 0x41, 0xfa, 0xc1,
	0x9a, 0xc6, 0x1a, 0x14, 0xc8, 0xca, 0xd0, 0x21, 0x9d, 0x52, 0x21, 0x35, 0x57, 0x9e, 0xfd, 0x8c,
	0xa1, 0xff, 0xce, 0xde, 0x32, 0xa6, 0x67, 0x5c, 0xad, 0xeb, 0x39, 0x27, 0x17, 0x90, 0x4c, 0xaa,
	0x8a, 0xec, 0xa3, 0x9b, 0xcd, 0x6f, 0x63, 0x7c, 0xb0, 0x01, 0xbc, 0x0a, 0x7d, 0xf4, 0xfd, 0xd7,
	0xef, 0x1f, 0xf1, 0x3e, 0x85, 0x62, 0xfd, 0xbc, 0xa8, 0x78, 0xb3, 0x94, 0x77, 0xe7, 0xd1, 0x09,
	0x79, 0x03, 0xa9, 0x0f, 0x85, 0x10, 0x7c, 0xb2, 0x13, 0xe3, 0x78, 0xb8, 0x83, 0xdd, 0xc7, 0xa4,
	0xf0, 0x9b, 0x63, 0x7a, 0x0d, 0x1d, 0x77, 0x74, 0xe2, 0xa5, 0xb7, 0x62, 0x1a, 0x1f, 0x6e, 0x21,
	0x81, 0x63, 0x88, 0x1c, 0x7d, 0xfa, 0xc0, 0x71, 0x2c, 0x6b, 0x6d, 0x1c, 0xc3, 0x25, 0x24, 0xa5,
	0x15, 0xc1, 0xcc, 0xe6, 0xfe, 0xc1, 0xcc, 0xd6, 0xc9, 0xe8, 0x63, 0x7c, 0x3e, 0xa4, 0x03, 0x5c,
	0xc1, 0x8a, 0xe2, 0xab, 0x0b, 0xe5, 0xdb, 0x79, 0x74, 0xf2, 0x39, 0xc5, 0xbf, 0xe6, 0x8b, 0x3f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x30, 0x54, 0xc7, 0xd7, 0xca, 0x03, 0x00, 0x00,
}
